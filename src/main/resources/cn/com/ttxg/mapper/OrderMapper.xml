<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.ttxg.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="cn.com.ttxg.pojo.Order">
    <id column="orderid" jdbcType="INTEGER" property="orderid" />
    <result column="ordertype" jdbcType="VARCHAR" property="ordertype" />
    <result column="ordermoney" jdbcType="VARCHAR" property="ordermoney" />
    <result column="orderremarks" jdbcType="VARCHAR" property="orderremarks" />
    <result column="orderdate" jdbcType="DATE" property="orderdate" />
    <result column="orderstate" jdbcType="VARCHAR" property="orderstate" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="delivery" jdbcType="VARCHAR" property="delivery" />
    <result column="custom" jdbcType="VARCHAR" property="custom" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orderid, ordertype, ordermoney, orderremarks, orderdate, orderstate, userid, state, 
    delivery, custom
  </sql>
  <select id="selectByExample" parameterType="cn.com.ttxg.pojo.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `order`
    where orderid = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `order`
    where orderid = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.ttxg.pojo.OrderExample">
    delete from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.ttxg.pojo.Order"  useGeneratedKeys="true">
    insert into `order` (orderid, ordertype, ordermoney, 
      orderremarks, orderdate, orderstate, 
      userid, state, delivery, 
      custom)
    values (#{orderid,jdbcType=INTEGER}, #{ordertype,jdbcType=VARCHAR}, #{ordermoney,jdbcType=VARCHAR}, 
      #{orderremarks,jdbcType=VARCHAR}, #{orderdate,jdbcType=DATE}, #{orderstate,jdbcType=VARCHAR}, 
      #{userid,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, #{delivery,jdbcType=VARCHAR}, 
      #{custom,jdbcType=VARCHAR})
      <selectKey keyProperty="orderid" order="AFTER" resultType="java.lang.Integer">
        SELECT LAST_INSERT_ID()
    	</selectKey>
  </insert>
  <insert id="insertSelective" parameterType="cn.com.ttxg.pojo.Order">
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        orderid,
      </if>
      <if test="ordertype != null">
        ordertype,
      </if>
      <if test="ordermoney != null">
        ordermoney,
      </if>
      <if test="orderremarks != null">
        orderremarks,
      </if>
      <if test="orderdate != null">
        orderdate,
      </if>
      <if test="orderstate != null">
        orderstate,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="delivery != null">
        delivery,
      </if>
      <if test="custom != null">
        custom,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="ordertype != null">
        #{ordertype,jdbcType=VARCHAR},
      </if>
      <if test="ordermoney != null">
        #{ordermoney,jdbcType=VARCHAR},
      </if>
      <if test="orderremarks != null">
        #{orderremarks,jdbcType=VARCHAR},
      </if>
      <if test="orderdate != null">
        #{orderdate,jdbcType=DATE},
      </if>
      <if test="orderstate != null">
        #{orderstate,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="delivery != null">
        #{delivery,jdbcType=VARCHAR},
      </if>
      <if test="custom != null">
        #{custom,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.ttxg.pojo.OrderExample" resultType="java.lang.Long">
    select count(*) from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `order`
    <set>
      <if test="record.orderid != null">
        orderid = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.ordertype != null">
        ordertype = #{record.ordertype,jdbcType=VARCHAR},
      </if>
      <if test="record.ordermoney != null">
        ordermoney = #{record.ordermoney,jdbcType=VARCHAR},
      </if>
      <if test="record.orderremarks != null">
        orderremarks = #{record.orderremarks,jdbcType=VARCHAR},
      </if>
      <if test="record.orderdate != null">
        orderdate = #{record.orderdate,jdbcType=DATE},
      </if>
      <if test="record.orderstate != null">
        orderstate = #{record.orderstate,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.delivery != null">
        delivery = #{record.delivery,jdbcType=VARCHAR},
      </if>
      <if test="record.custom != null">
        custom = #{record.custom,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `order`
    set orderid = #{record.orderid,jdbcType=INTEGER},
      ordertype = #{record.ordertype,jdbcType=VARCHAR},
      ordermoney = #{record.ordermoney,jdbcType=VARCHAR},
      orderremarks = #{record.orderremarks,jdbcType=VARCHAR},
      orderdate = #{record.orderdate,jdbcType=DATE},
      orderstate = #{record.orderstate,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      state = #{record.state,jdbcType=VARCHAR},
      delivery = #{record.delivery,jdbcType=VARCHAR},
      custom = #{record.custom,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.ttxg.pojo.Order">
    update `order`
    <set>
      <if test="ordertype != null">
        ordertype = #{ordertype,jdbcType=VARCHAR},
      </if>
      <if test="ordermoney != null">
        ordermoney = #{ordermoney,jdbcType=VARCHAR},
      </if>
      <if test="orderremarks != null">
        orderremarks = #{orderremarks,jdbcType=VARCHAR},
      </if>
      <if test="orderdate != null">
        orderdate = #{orderdate,jdbcType=DATE},
      </if>
      <if test="orderstate != null">
        orderstate = #{orderstate,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="delivery != null">
        delivery = #{delivery,jdbcType=VARCHAR},
      </if>
      <if test="custom != null">
        custom = #{custom,jdbcType=VARCHAR},
      </if>
    </set>
    where orderid = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.ttxg.pojo.Order">
    update `order`
    set ordertype = #{ordertype,jdbcType=VARCHAR},
      ordermoney = #{ordermoney,jdbcType=VARCHAR},
      orderremarks = #{orderremarks,jdbcType=VARCHAR},
      orderdate = #{orderdate,jdbcType=DATE},
      orderstate = #{orderstate,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      delivery = #{delivery,jdbcType=VARCHAR},
      custom = #{custom,jdbcType=VARCHAR}
    where orderid = #{orderid,jdbcType=INTEGER}
  </update>
  
  
  
  
  <!-- *************************************定制的内容********************************************* -->
  <resultMap type="OrderCustom" id="withFiveMap">
  	<id column="orderid" jdbcType="INTEGER" property="orderid" />
    <result column="ordertype" jdbcType="VARCHAR" property="ordertype" />
    <result column="ordermoney" jdbcType="VARCHAR" property="ordermoney" />
    <result column="orderremarks" jdbcType="VARCHAR" property="orderremarks" />
    <result column="orderdate" jdbcType="DATE" property="orderdate" />
    <result column="orderstate" jdbcType="VARCHAR" property="orderstate" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="delivery" jdbcType="VARCHAR" property="delivery" />
    <result column="custom" jdbcType="VARCHAR" property="custom" />
    <association property="user" javaType="User">
    	<id column="userid" jdbcType="INTEGER" property="userid" />
    	<result column="usertype" jdbcType="VARCHAR" property="usertype" />
    	<result column="username" jdbcType="VARCHAR" property="username" />
    	<result column="password" jdbcType="VARCHAR" property="password" />
    	<result column="phone" jdbcType="VARCHAR" property="phone" />
    	<result column="address" jdbcType="VARCHAR" property="address" />
    	<result column="name" jdbcType="VARCHAR" property="name" />
    	<result column="state" jdbcType="VARCHAR" property="state" />
    </association>
    <association property="deliver" javaType="User">
    	<id column="userid" jdbcType="INTEGER" property="userid" />
    	<result column="usertype" jdbcType="VARCHAR" property="usertype" />
    	<result column="delivery" jdbcType="VARCHAR" property="username" />
    	<result column="password" jdbcType="VARCHAR" property="password" />
    	<result column="phone" jdbcType="VARCHAR" property="phone" />
    	<result column="address" jdbcType="VARCHAR" property="address" />
    	<result column="name" jdbcType="VARCHAR" property="name" />
    	<result column="state" jdbcType="VARCHAR" property="state" />
    </association>
    <association property="customer" javaType="User">
    	<id column="userid" jdbcType="INTEGER" property="userid" />
    	<result column="usertype" jdbcType="VARCHAR" property="usertype" />
    	<result column="customer" jdbcType="VARCHAR" property="username" />
    	<result column="password" jdbcType="VARCHAR" property="password" />
    	<result column="phone" jdbcType="VARCHAR" property="phone" />
    	<result column="address" jdbcType="VARCHAR" property="address" />
    	<result column="name" jdbcType="VARCHAR" property="name" />
    	<result column="state" jdbcType="VARCHAR" property="state" />
    </association>
    
    <collection property="flows" ofType="FlowCustom" column="flowid">
		<id column="flowid" jdbcType="INTEGER" property="flowid" />
    	<result column="goodsid" jdbcType="INTEGER" property="goodsid" />
    	<result column="goodsnumber" jdbcType="VARCHAR" property="goodsnumber" />
    	<result column="subtotal" jdbcType="VARCHAR" property="subtotal" />
    	<result column="orderid" jdbcType="INTEGER" property="orderid" />
    	<result column="state" jdbcType="VARCHAR" property="state" />
    	
    	<association property="goods" javaType="GoodsCustom">
    		<id column="goodsid" jdbcType="INTEGER" property="goodsid" />
    			<result column="goodsname" jdbcType="VARCHAR" property="goodsname" />
    			<result column="goodsmoney" jdbcType="VARCHAR" property="goodsmoney" />
    			<result column="goodsremarks" jdbcType="VARCHAR" property="goodsremarks" />
    			<result column="state" jdbcType="VARCHAR" property="state" />
    			<result column="brandid" jdbcType="INTEGER" property="brandid" />
    			<result column="marketprice" jdbcType="VARCHAR" property="marketprice" />
    			<association property="brand" javaType="Brand">
    				<id column="brandid" jdbcType="INTEGER" property="brandid" />
    				<result column="brandname" jdbcType="VARCHAR" property="brandname" />
    			</association>
    	</association>
    </collection>
    </resultMap>
    
    
    
    
    
    
    <sql id="orderFive_Column_List">
		o.orderid,o.ordertype,o.custom,f.goodsid,o.orderremarks,o.orderstate,g.goodsname,f.goodsnumber,f.subtotal,o.ordermoney,g.marketprice,o.orderdate,  
		chuliren.username AS username,   
		songhuoren.username AS delivery,   
		kehu.username AS customer
		
	</sql>
    <select id="selectCompleteOrder" resultMap="withFiveMap" parameterType="OrderExample">
    	select
		<if test="distinct">
			distinct
		</if>
		<include refid="orderFive_Column_List" ></include>
			FROM (((`order` o
				LEFT JOIN flow f ON o.orderid=f.orderid) 
				LEFT JOIN `goods` g ON f.goodsid =g.goodsid) 
				LEFT JOIN `brand` b ON g.brandid = b.brandid)
				LEFT JOIN `user`  AS chuliren ON o.userid = chuliren.userid 
				LEFT JOIN `user`  AS songhuoren ON o.delivery = songhuoren.userid
				LEFT JOIN `user`  AS kehu ON o.custom = kehu.userid
		<if test="_parameter != null">
      		<include refid="Example_Where_Clause" />
    	</if>
		 <if test="orderByClause != null">
     		order by ${orderByClause}
    	</if>
    
    </select>
    
    

  
  <sql id="orderTwo_Column_List">
		o.orderid,o.ordertype,o.custom,o.ordermoney,o.orderstate,
		chuliren.username AS username,
		songhuoren.username AS delivery,o.orderdate,
		kehu.username AS customer
	</sql>
    <select id="selectSimpleOrder" resultMap="withFiveMap" parameterType="OrderExample">
    	select
		<if test="distinct">
			distinct
		</if>
		<include refid="orderTwo_Column_List" ></include>
			FROM `order` o
				LEFT JOIN `user`  AS chuliren ON o.userid = chuliren.userid 
				LEFT JOIN `user`  AS songhuoren ON o.delivery = songhuoren.userid
				LEFT JOIN `user`  AS kehu ON o.custom = kehu.userid
		<if test="_parameter != null">
      		<include refid="Example_Where_Clause" />
    	</if>
		 <if test="orderByClause != null">
     		order by ${orderByClause}
    	</if>
    
    </select>

	<select id="selectMaxOrderId" resultType="int">
	SELECT MAX(orderid) FROM `order`
	</select>


  
</mapper>